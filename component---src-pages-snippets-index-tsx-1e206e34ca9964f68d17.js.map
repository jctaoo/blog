{"version":3,"sources":["webpack:///./src/pages/snippets/index.tsx"],"names":["SnippetPage","props","useFilter","tag","category","snippets","getNodesFromNodeData","data","allSnippet","filter","item","flag","about","tags","map","t","title","includes","description","useSiteMetadata","pageDescription","id","className","env","ListEnvironment","shrink","passage","mode","PassageDetailViewMode","Partial","key","identifier","onClickCategory","_","jumpToSnippetsPage","onClickTag"],"mappings":"4FAAA,wKAuBe,SAASA,EAAYC,GAAoC,QAC9CC,cAAjBC,EAD+D,KAC1DC,EAD0D,KAGlEC,EAAWC,YAAqBL,EAAMM,KAAKC,YAC/CH,EAAWA,EAASI,QAAO,SAACC,GAC1B,IAAIC,GAAO,EAOX,OANMR,IACJQ,EAAOD,EAAKA,KAAKE,MAAMC,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAEC,SAAOC,SAASd,IAErDC,IACJO,EAAOD,EAAKA,KAAKE,MAAMR,WAAaA,GAE/BO,KAGT,IAAMO,EAAW,UAAGC,cAAkBC,uBAArB,aAAG,EAAmCf,SAEvD,OACE,kBAAC,IAAD,CAAUgB,GAAG,gBACX,kBAAC,IAAD,CAAKH,YAAaA,IAClB,yBAAKI,UAAU,0BACb,yBAAKA,UAAU,iCACb,kBAAC,IAAD,CAAWC,IAAKC,IAAgBnB,SAAUoB,QAAM,KAElD,yBAAKH,UAAU,gBACZjB,EAASS,KAAI,SAACJ,GACb,OACE,kBAAC,IAAD,CACEY,UAAU,eACVI,QAAShB,EACTiB,KAAMC,IAAsBC,QAC5BC,IAAKpB,EAAKA,KAAKqB,WACfC,gBAAiB,SAACC,EAAG7B,GAAJ,OACf8B,YAAmB,CAAE9B,cAEvB+B,WAAY,SAACF,EAAG9B,GAAJ,OAAY+B,YAAmB,CAAE/B,IAAKA,EAAIa,mB","file":"component---src-pages-snippets-index-tsx-1e206e34ca9964f68d17.js","sourcesContent":["import React from \"react\";\nimport \"./snippets.scss\";\nimport \"./snippets.scss\";\nimport { graphql, PageProps } from \"gatsby\";\nimport BasePage from \"../../layout/base-page/base-page\";\nimport { SnippetDetail } from \"../../models/snippet-content\";\nimport { NodeData, getNodesFromNodeData } from \"../../models/node-data\";\nimport SEO from \"../../components/SEO/SEO\";\nimport useSiteMetadata from \"../../hooks/use-site-metadata\";\nimport PassageDetailView, {\n  PassageDetailViewMode,\n} from \"../../components/passage-detail/passage-detail\";\nimport {\n  useFilter,\n  ListEnvironment,\n  jumpToSnippetsPage,\n} from \"../../componsitions/filter\";\nimport ListTitle from \"../../components/list-title/list-title\";\n\ninterface SnippetsPageData {\n  allSnippet: NodeData<SnippetDetail>;\n}\n\nexport default function SnippetPage(props: PageProps<SnippetsPageData>) {\n  const [tag, category] = useFilter();\n\n  let snippets = getNodesFromNodeData(props.data.allSnippet);\n  snippets = snippets.filter((item) => {\n    let flag = true;\n    if (!!tag) {\n      flag = item.item.about.tags.map((t) => t.title).includes(tag);\n    }\n    if (!!category) {\n      flag = item.item.about.category === category;\n    }\n    return flag;\n  });\n\n  const description = useSiteMetadata().pageDescription?.snippets;\n\n  return (\n    <BasePage id=\"snippet-page\">\n      <SEO description={description} />\n      <div className=\"snippet-list-container\">\n        <div className=\"snippet-list-header-container\">\n          <ListTitle env={ListEnvironment.snippets} shrink />\n        </div>\n        <div className=\"snippet-list\">\n          {snippets.map((item) => {\n            return (\n              <PassageDetailView\n                className=\"snippet-item\"\n                passage={item}\n                mode={PassageDetailViewMode.Partial}\n                key={item.item.identifier}\n                onClickCategory={(_, category) =>\n                  jumpToSnippetsPage({ category })\n                }\n                onClickTag={(_, tag) => jumpToSnippetsPage({ tag: tag.title })}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </BasePage>\n  );\n}\n\nexport const query = graphql`\n  {\n    allSnippet {\n      edges {\n        node {\n          content\n          item {\n            abbr\n            about {\n              category\n              tags {\n                title\n                id\n              }\n              readTime\n              updateTimes\n            }\n            identifier\n            title\n            codeRaw\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}