{"version":3,"sources":["webpack:///./src/components/passage-item/passage-item.tsx","webpack:///./src/pages/passages/index.tsx"],"names":["PassageItem","passage","goToPassage","id","a","navigate","className","title","onClick","identifier","abbr","about","onTagClick","_","tag","jumpToPassagePage","onCategoryClick","category","PassageListPage","props","useFilter","passages","getNodesFromNodeData","data","allPassage","filter","item","flag","tags","map","t","includes","description","useSiteMetadata","pageDescription","SEO","env","ListEnvironment","key"],"mappings":"yUAiCeA,MAzBf,YAA4D,IAArCC,EAAqC,EAArCA,QACfC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACZC,YAAS,YAAYF,GADT,2CAAH,sDAIjB,OACE,0BAAMG,UAAU,gBACd,kBAAC,IAAD,CACEC,MAAON,EAAQM,MACfC,QAAO,sBAAE,sBAAAJ,EAAA,sEACDF,EAAYD,EAAQQ,YADnB,6CAIX,0BAAMH,UAAU,6BACd,uBAAGA,UAAU,kCAAkCL,EAAQS,KAAvD,QAEF,kBAAC,IAAD,CACEC,MAAOV,EAAQU,MACfC,WAAY,SAACC,EAAGC,GAAJ,OAAYC,YAAkB,CAAED,IAAKA,EAAIP,SACrDS,gBAAiB,SAACH,EAAGI,GAAJ,OAAiBF,YAAkB,CAAEE,kB,gDCL/C,SAASC,EAAgBC,GAAuC,QACrDC,cAAjBN,EADsE,KACjEG,EADiE,KAGzEI,EAAWC,YAAqBH,EAAMI,KAAKC,YAC/CH,EAAWA,EAASI,QAAO,SAACC,GAC1B,IAAIC,GAAO,EAOX,OANMb,IACJa,EAAOD,EAAKf,MAAMiB,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAEvB,SAAOwB,SAASjB,IAEhDG,IACJU,EAAOD,EAAKf,MAAMM,WAAaA,GAE1BU,KAGT,IAAMK,EAAW,UAAGC,cAAkBC,uBAArB,aAAG,EAAmCb,SAEvD,OACE,kBAAC,IAAD,CAAUlB,GAAG,qBACX,kBAACgC,EAAA,EAAD,CAAKH,YAAaA,IAClB,yBAAK1B,UAAU,0BACb,kBAAC,IAAD,CAAW8B,IAAKC,IAAgBhB,WAChC,yBAAKf,UAAU,gBACZe,EAASQ,KAAI,SAACH,GAAD,OACZ,kBAAC,EAAD,CAAazB,QAASyB,EAAMY,IAAKZ,EAAKjB","file":"component---src-pages-passages-index-tsx-1c66dd8f5ded0f4248c3.js","sourcesContent":["import React from \"react\";\nimport PassageAbout from \"../passage-about/passage-about\";\nimport \"./passage-item.scss\";\nimport PassageTitle from \"../passage-title/passage-title\";\nimport { PassageAbbr } from \"../../models/passage-content\";\nimport { navigate } from \"gatsby\";\nimport { jumpToPassagePage } from \"../../componsitions/filter\";\n\nfunction PassageItem({ passage }: { passage: PassageAbbr }) {\n  const goToPassage = async (id: string) => {\n    await navigate(`/passage/${id}`);\n  };\n\n  return (\n    <span className=\"passage-item\">\n      <PassageTitle\n        title={passage.title}\n        onClick={async () => {\n          await goToPassage(passage.identifier);\n        }}\n      />\n      <span className=\"passage-item-abbreviation\">\n        <p className=\"passage-item-abbreviation-text\">{passage.abbr}...</p>\n      </span>\n      <PassageAbout\n        about={passage.about}\n        onTagClick={(_, tag) => jumpToPassagePage({ tag: tag.title })}\n        onCategoryClick={(_, category) => jumpToPassagePage({ category })}\n      />\n    </span>\n  );\n}\n\nexport default PassageItem;\n","import React from \"react\";\nimport \"./passages.scss\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { Tag } from \"../../models/base-content\";\nimport BasePage from \"../../layout/base-page/base-page\";\nimport PassageItem from \"../../components/passage-item/passage-item\";\nimport { PassageAbbr } from \"../../models/passage-content\";\nimport {\n  getNodesFromNodeData,\n  NodeContentData,\n  NodeData,\n} from \"../../models/node-data\";\nimport SEO from \"../../components/SEO/SEO\";\nimport useSiteMetadata from \"../../hooks/use-site-metadata\";\nimport { useFilter, ListEnvironment } from \"../../componsitions/filter\";\nimport ListTitle from \"../../components/list-title/list-title\";\n\ninterface PassageListPageData {\n  allPassage: NodeData<PassageAbbr>;\n  allCategory: NodeContentData<string>;\n}\n\nexport default function PassageListPage(props: PageProps<PassageListPageData>) {\n  const [tag, category] = useFilter();\n\n  let passages = getNodesFromNodeData(props.data.allPassage);\n  passages = passages.filter((item) => {\n    let flag = true;\n    if (!!tag) {\n      flag = item.about.tags.map((t) => t.title).includes(tag);\n    }\n    if (!!category) {\n      flag = item.about.category === category;\n    }\n    return flag;\n  });\n\n  const description = useSiteMetadata().pageDescription?.passages;\n\n  return (\n    <BasePage id=\"passage-list-page\">\n      <SEO description={description} />\n      <div className=\"passage-list-container\">\n        <ListTitle env={ListEnvironment.passages} />\n        <div className=\"passage-list\">\n          {passages.map((item) => (\n            <PassageItem passage={item} key={item.identifier} />\n          ))}\n        </div>\n      </div>\n    </BasePage>\n  );\n}\n\nexport const query = graphql`\n  {\n    allPassage {\n      edges {\n        node {\n          title\n          identifier\n          abbr\n          about {\n            category\n            readTime\n            tags {\n              id\n              title\n            }\n            updateTimes\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}