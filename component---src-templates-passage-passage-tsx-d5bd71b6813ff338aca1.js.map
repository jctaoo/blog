{"version":3,"sources":["webpack:///./src/templates/passage/passage.tsx"],"names":["PassagePage","props","matchedPassages","getNodesFromNodeData","data","allPassageDetail","currentPassage","length","undefined","config","siteMetadata","disqus","description","title","item","keywords","about","tags","map","t","abbr","largeImage","topImage","largeImageAlt","topImageAlt","id","passage","disqusConfig","onClickCategory","_","category","jumpToPassagePage","onClickTag","tag","noThrow","to"],"mappings":"8FAAA,4JAkBe,SAASA,EAAYC,GAClC,IAAMC,EAAkBC,YAAqBF,EAAMG,KAAKC,kBAClDC,EACJJ,EAAgBK,OAAS,EAAIL,EAAgB,QAAKM,EAC9CC,EAASR,EAAMG,KAAKM,aAAaD,OAAOE,OAExCC,EAA6CN,EAC/C,CACEO,MAAOP,EAAeQ,KAAKD,MAC3BE,SAAUT,EAAeQ,KAAKE,MAAMC,KAAKC,KAAI,SAACC,GAAD,OAAOA,EAAEN,SACtDD,YAAaN,EAAeQ,KAAKM,KACjCC,WAAYf,EAAegB,SAC3BC,cAAejB,EAAekB,kBAEhChB,EAEJ,OAAQF,EAGN,kBAAC,IAAD,CAAUmB,GAAG,gBACX,kBAAC,IAAD,CAAKb,YAAaA,IAClB,kBAAC,IAAD,CACEc,QAASpB,EACTqB,aAAclB,EACdmB,gBAAiB,SAACC,EAAGC,GAAJ,OAAiBC,YAAkB,CAAED,cACtDE,WAAY,SAACH,EAAGI,GAAJ,OAAYF,YAAkB,CAAEE,IAAKA,EAAIpB,YARzD,kBAAC,WAAD,CAAUqB,SAAO,EAACC,GAAI,W","file":"component---src-templates-passage-passage-tsx-d5bd71b6813ff338aca1.js","sourcesContent":["import React from \"react\";\nimport \"./PassagePage.scss\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { PassageDetail } from \"../../models/passage-content\";\nimport PassageDetailView from \"../../components/passage-detail/passage-detail\";\nimport Config from \"../../models/config\";\nimport BasePage from \"../../layout/base-page/base-page\";\nimport { Redirect } from \"@reach/router\";\nimport { NodeData, getNodesFromNodeData } from \"../../models/node-data\";\nimport SEO from \"../../components/SEO/SEO\";\nimport PageDescription from \"../../models/page-description\";\nimport { jumpToPassagePage } from \"../../componsitions/filter\";\n\ninterface PassagePageData {\n  allPassageDetail: NodeData<PassageDetail>;\n  siteMetadata: { config: Config };\n}\n\nexport default function PassagePage(props: PageProps<PassagePageData>) {\n  const matchedPassages = getNodesFromNodeData(props.data.allPassageDetail);\n  const currentPassage =\n    matchedPassages.length > 0 ? matchedPassages[0] : undefined;\n  const config = props.data.siteMetadata.config.disqus;\n\n  const description: PageDescription | undefined = !!currentPassage\n    ? {\n        title: currentPassage.item.title,\n        keywords: currentPassage.item.about.tags.map((t) => t.title),\n        description: currentPassage.item.abbr,\n        largeImage: currentPassage.topImage,\n        largeImageAlt: currentPassage.topImageAlt,\n      }\n    : undefined;\n\n  return !currentPassage ? (\n    <Redirect noThrow to={\"/404\"} />\n  ) : (\n    <BasePage id=\"passage-page\">\n      <SEO description={description} />\n      <PassageDetailView\n        passage={currentPassage}\n        disqusConfig={config}\n        onClickCategory={(_, category) => jumpToPassagePage({ category })}\n        onClickTag={(_, tag) => jumpToPassagePage({ tag: tag.title })}\n      />\n    </BasePage>\n  );\n}\n\nexport const query = graphql`\n  query($identifier: String!) {\n    allPassageDetail(filter: { item: { identifier: { eq: $identifier } } }) {\n      edges {\n        node {\n          content\n          topImage\n          topImageAlt\n          circleImage\n          item {\n            abbr\n            identifier\n            title\n            about {\n              category\n              readTime\n              updateTimes\n              tags {\n                id\n                title\n              }\n            }\n          }\n        }\n      }\n    }\n    siteMetadata {\n      config {\n        disqus {\n          shortName\n          developmentShortName\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}